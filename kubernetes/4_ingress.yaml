kind: ConfigMap
apiVersion: v1
metadata:
 name: ingress-config
 namespace: dev

---

kind: ServiceAccount
apiVersion: v1
metadata:
 name: ingress-auth
 namespace: dev
 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: ingress-auth
  namespace: dev

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: dpl-nginx
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.21.0
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/ingress-config
      serviceAccountName: ingress-auth
---

apiVersion: v1
kind: Service
metadata:
  name: svc-ingress
  namespace: dev
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: nginx-ingress
  sessionAffinity: None
  type: LoadBalancer


---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress
  namespace: dev
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: svc-test
          servicePort: 80
